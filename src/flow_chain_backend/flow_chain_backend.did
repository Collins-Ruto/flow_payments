type Bid = record {
  id : nat64;
  status : BidStatus;
  supplier_id : nat64;
  updated_at : text;
  delivery_time : text;
  supplier_name : text;
  created_at : text;
  notes : text;
  order_id : nat64;
  amount : nat64;
};
type BidPayload = record {
  delivery_time : text;
  notes : text;
  order_id : nat64;
  amount : nat64;
};
type BidStatus = variant { Approved; Rejected; Pending };
type Client = record {
  id : nat64;
  reg_no : text;
  owner : principal;
  logo : text;
  name : text;
  email : text;
  website : text;
  bussiness_type : text;
  address : text;
  phone : text;
  products : vec text;
  industry : text;
  owner_name : text;
  affiliated_companies : vec text;
};
type ClientCompanyPayload = record {
  reg_no : text;
  logo : text;
  name : text;
  email : text;
  website : text;
  bussiness_type : text;
  address : text;
  phone : text;
  industry : text;
  owner_name : text;
};
type Driver = record {
  id : nat64;
  license_expiry : text;
  driver_status : text;
  vehicle_reg_no : text;
  owner : principal;
  trainings : vec text;
  vehicle_model : text;
  experience : text;
  company : text;
  contact_info : text;
  license_no : text;
  vehicle_make : text;
  vehicle_type : text;
  driver_rating : nat64;
  full_name : text;
  maintenance_records : vec MaintainanceRecord;
};
type DriverPayload = record {
  license_expiry : text;
  vehicle_reg_no : text;
  trainings : vec text;
  vehicle_model : text;
  experience : text;
  company : text;
  contact_info : text;
  license_no : text;
  vehicle_make : text;
  vehicle_type : text;
  full_name : text;
};
type Error = variant {
  InvalidInput : record { msg : text };
  StringError : text;
  NotFound : record { msg : text };
  ValidationError : record { msg : text };
  Unauthorized : record { msg : text };
};
type ItemDetails = record {
  id : nat64;
  sku : text;
  weight : text;
  status : text;
  supplier_id : opt nat64;
  updated_at : text;
  manufacturer : text;
  name : text;
  description : text;
  created_at : text;
  unit_price : nat64;
  quantity : nat64;
  category : text;
  client_id : opt nat64;
  dimensions : text;
};
type ItemDetailsClientPayload = record {
  sku : text;
  weight : text;
  manufacturer : text;
  name : text;
  description : text;
  unit_price : nat64;
  quantity : nat64;
  category : text;
  client_id : opt nat64;
  dimensions : text;
};
type MaintainanceRecord = record {
  id : nat64;
  vehicle_reg_no : text;
  cost : text;
  date : text;
  mechanic_contact : text;
  description : text;
  mechanic : text;
  mechanic_email : text;
  mechanic_address : text;
  mechanic_phone : text;
};
type MaintainanceRecordPayload = record {
  vehicle_reg_no : text;
  cost : text;
  date : text;
  mechanic_contact : text;
  description : text;
  mechanic : text;
  mechanic_email : text;
  mechanic_address : text;
  mechanic_phone : text;
};
type Order = record {
  id : nat64;
  supplier_id : opt text;
  pickup_address : text;
  order_weight : text;
  order_status : text;
  company_name : text;
  driver_id : opt text;
  order_name : text;
  order_type : text;
  delivery_address : text;
  category : text;
  delivery : opt text;
  expected_delivery : text;
  priority : text;
  items : vec OrderItem;
  company_id : nat64;
  vehicle_type : text;
};
type OrderDetailsPayload = record {
  pickup_address : text;
  order_weight : text;
  order_name : text;
  order_type : text;
  delivery_address : text;
  category : text;
  expected_delivery : text;
  priority : text;
  items : vec OrderItem;
  company_id : nat64;
  vehicle_type : text;
};
type OrderItem = record { quantity : nat64; item_id : nat64 };
type PaymentReservation = record {
  id : nat64;
  payer : principal;
  amount : nat64;
  expires_at : nat64;
};
type Quotation = record {
  id : nat64;
  supplier_id : nat64;
  supplier_name : text;
  service_description : text;
  supplier_address : text;
  supplier_email : text;
  quotation_status : text;
  order_id : nat64;
  shipping_cost : nat64;
  quotation_title : text;
};
type QuotationPayload = record {
  service_description : text;
  order_id : nat64;
  shipping_cost : nat64;
  quotation_title : text;
};
type Result = variant { Ok : Client; Err : text };
type Result_1 = variant { Ok : Supplier; Err : text };
type Result_10 = variant { Ok : Quotation; Err : text };
type Result_11 = variant { Ok : vec record { ItemDetails; nat64 }; Err : text };
type Result_12 = variant { Ok : vec Quotation; Err : text };
type Result_13 = variant { Ok : vec Bid; Err : text };
type Result_14 = variant { Ok : record { nat64; nat64; float64 }; Err : text };
type Result_15 = variant {
  Ok : vec record { ItemDetails; nat64; text };
  Err : text;
};
type Result_16 = variant { Ok : bool; Err : Error };
type Result_2 = variant { Ok : Order; Err : text };
type Result_3 = variant { Ok : Warehouse; Err : text };
type Result_4 = variant { Ok : record { Bid; Order }; Err : text };
type Result_5 = variant { Ok : Bid; Err : text };
type Result_6 = variant { Ok : Driver; Err : text };
type Result_7 = variant { Ok : ItemDetails; Err : text };
type Result_8 = variant { Ok : MaintainanceRecord; Err : text };
type Result_9 = variant { Ok : PaymentReservation; Err : Error };
type Supplier = record {
  id : nat64;
  reg_no : text;
  reviews : vec text;
  owner : principal;
  logo : text;
  name : text;
  supply_chain_type : text;
  email : text;
  website : text;
  bussiness_type : text;
  drivers : vec Driver;
  address : text;
  phone : text;
  owner_name : text;
};
type SupplierCompanyPayload = record {
  reg_no : text;
  logo : text;
  name : text;
  supply_chain_type : text;
  email : text;
  website : text;
  bussiness_type : text;
  address : text;
  phone : text;
  owner_name : text;
};
type UpdateDriverPayload = record {
  id : nat64;
  license_expiry : text;
  vehicle_reg_no : text;
  vehicle_model : text;
  experience : text;
  company : text;
  contact_info : text;
  vehicle_make : text;
  vehicle_type : text;
};
type Warehouse = record {
  id : nat64;
  status : text;
  supplier_id : nat64;
  inventory : vec WarehouseInventory;
  name : text;
  used_capacity : nat64;
  capacity : nat64;
  location : text;
};
type WarehouseAddItemPayload = record {
  quantity : nat64;
  warehouse_id : nat64;
  item_id : nat64;
  shelf_location : text;
};
type WarehouseInventory = record {
  last_updated : text;
  quantity : nat64;
  item_id : nat64;
  shelf_location : text;
};
type WarehousePayload = record {
  supplier_id : nat64;
  name : text;
  capacity : nat64;
  location : text;
};
service : {
  add_affiliation : (nat64, text) -> (Result);
  add_driver_to_supply_company : (nat64, nat64) -> (Result_1);
  add_item_to_order : (nat64, OrderItem) -> (Result_2);
  add_item_to_warehouse : (WarehouseAddItemPayload) -> (Result_3);
  add_product : (nat64, text) -> (Result);
  approve_bid : (nat64) -> (Result_4);
  assign_driver : (nat64, nat64) -> (Result_2);
  assign_supplier : (nat64, nat64) -> (Result_2);
  create_bid : (BidPayload) -> (Result_5);
  create_client_company : (ClientCompanyPayload) -> (Result);
  create_driver : (DriverPayload) -> (Result_6);
  create_item_as_client : (ItemDetailsClientPayload) -> (Result_7);
  create_maintainance_record : (MaintainanceRecordPayload) -> (Result_8);
  create_order : (OrderDetailsPayload) -> (Result_2);
  create_payment_reservation : (nat64) -> (Result_9);
  create_quotation : (QuotationPayload) -> (Result_10);
  create_supplier_company : (SupplierCompanyPayload) -> (Result_1);
  create_warehouse : (nat64, WarehousePayload) -> (Result_3);
  delete_client_company : (nat64) -> (Result);
  delete_item : (nat64) -> (Result_7);
  delete_supplier_company : (nat64) -> (Result_1);
  get_all_clients : () -> (vec Client) query;
  get_all_drivers : () -> (vec Driver) query;
  get_all_maintainance_records : () -> (vec MaintainanceRecord) query;
  get_all_orders : () -> (vec Order) query;
  get_all_suppliers : () -> (vec Supplier) query;
  get_all_warehouse_inventory : (nat64) -> (
      vec record { Warehouse; vec record { ItemDetails; nat64; text } },
    ) query;
  get_bid : (nat64) -> (Result_5) query;
  get_client : (nat64) -> (Result) query;
  get_client_active_orders : (nat64) -> (vec Order) query;
  get_client_by_owner : () -> (Result) query;
  get_client_completed_orders : (nat64) -> (vec Order) query;
  get_client_new_orders : (nat64) -> (vec Order) query;
  get_client_orders : (nat64) -> (vec Order) query;
  get_driver : (nat64) -> (Result_6) query;
  get_driver_active_orders : (nat64) -> (vec Order) query;
  get_driver_by_owner : () -> (Result_6) query;
  get_driver_completed_orders : (nat64) -> (vec Order) query;
  get_driver_maintenance_records : (nat64) -> (vec MaintainanceRecord) query;
  get_item : (nat64) -> (Result_7) query;
  get_maintainance_record : (nat64) -> (Result_8) query;
  get_new_orders : () -> (vec Order) query;
  get_order : (nat64) -> (Result_2) query;
  get_order_bids : (nat64) -> (vec Bid) query;
  get_order_items : (nat64) -> (Result_11) query;
  get_order_quotation : (nat64) -> (Result_12) query;
  get_pending_bids_for_order : (nat64) -> (vec Bid) query;
  get_pending_payments : () -> (vec PaymentReservation) query;
  get_persisted_payments : (principal) -> (opt PaymentReservation) query;
  get_supplier : (nat64) -> (Result_1) query;
  get_supplier_active_bids : (nat64) -> (vec Bid) query;
  get_supplier_active_orders : (nat64) -> (vec Order) query;
  get_supplier_bids : (nat64) -> (Result_13) query;
  get_supplier_by_owner : () -> (Result_1) query;
  get_supplier_completed_orders : (nat64) -> (vec Order) query;
  get_supplier_drivers : (nat64) -> (vec Driver) query;
  get_supplier_new_orders : (nat64) -> (vec Order) query;
  get_supplier_warehouses : (nat64) -> (vec Warehouse) query;
  get_warehouse_capacity_status : (nat64) -> (Result_14) query;
  get_warehouse_inventory : (nat64) -> (Result_15) query;
  list_items : () -> (vec ItemDetails) query;
  list_items_by_client : (nat64) -> (vec ItemDetails) query;
  list_items_by_supplier : (nat64) -> (vec ItemDetails) query;
  mark_order_as_completed : (nat64) -> (Result_2);
  remove_item_from_warehouse : (nat64, nat64, nat64) -> (Result_3);
  search_client_company : (text) -> (vec Client) query;
  search_items_by_category : (text) -> (vec ItemDetails) query;
  search_supplier_company : (text) -> (vec Supplier) query;
  update_client_company : (nat64, ClientCompanyPayload) -> (Result);
  update_driver : (nat64, UpdateDriverPayload) -> (Result_6);
  update_item_as_client : (nat64, ItemDetailsClientPayload) -> (Result_7);
  update_item_quantity : (nat64, nat64, nat64) -> (Result_3);
  update_order_status : (nat64, text) -> (Result_2);
  update_supplier_company : (nat64, SupplierCompanyPayload) -> (Result_1);
  update_warehouse : (nat64, WarehousePayload) -> (Result_3);
  verify_payment : (nat64, nat64) -> (Result_16);
  withdraw_bid : (nat64) -> (Result_5);
}
